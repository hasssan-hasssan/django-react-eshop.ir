{"version":3,"sources":["constants/productConstatns.js","constants/cartConstatns.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","constants/urlConstants.js","utils/axiosInstance.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/PayResultScreen.js","actions/payActions.js","utils/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","reducer","combineReducers","listProduct","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderListMy","orders","cartFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","BASE_URL","API_VERSION","axiosInstance","dispatch","instance","axios","create","baseURL","headers","Authorization","access","interceptors","request","use","req","a","jwt_decode","dayjs","unix","exp","diff","post","refresh","response","updateAccessToken","data","userLogoutAction","removeItem","obj","getState","setItem","stringify","Header","useSelector","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","Footer","Row","Col","Rating","value","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","display","margin","Message","Alert","HomeScreen","listProducts","useEffect","get","detail","message","sm","md","lg","xl","ProductScreen","match","history","useState","qty","setQty","params","Image","alt","ListGroup","countInStock","Form","Control","custom","onChange","e","target","Array","keys","Button","push","disabled","description","addToCart","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","fluid","rounded","reduce","acc","toFixed","FormContainer","children","xs","LoginScreen","redirect","tokenResult","email","setEmail","password","setPassword","activationMessage","setActivationMessage","onSubmit","preventDefault","config","header","userLoginAction","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","emailMessage","setEmailMessage","userRegisterAction","ProfileScreen","successUpdate","setSuccessUpdate","errorUserDetails","loadingUserDetails","errorUpdateProfile","loadingUpdateProfile","errorOrders","loadingOrders","TE","authRequestAxios","put","updateUserProfileAction","Table","striped","responsive","isPaid","isDelivered","createdAt","substring","totalPrice","paidAt","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","postalCode","setPostalCode","address","setAddress","city","setCity","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","payGateMessage","setPayGateMessage","href","goPayGate","then","window","assign","link","catch","PayResultScreen","setSuccess","serverMsg","setServerMsg","serverStatus","setServerStatus","serverTrackId","setServerTrackId","serverOrderId","setServerOrderId","serverError","setServerError","oid","trackId","payInq","transId","order_id","inquiryPayResult","status","track_id","PrivateRoute","rest","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9432920.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\"\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\"\r\n\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\"","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\"\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\"\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\"\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\"","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { listProductReducer, detailsProductReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    listProduct: listProductReducer,\r\n    productDetails: detailsProductReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderListMy: orderListMyReducer\r\n})\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ?\r\n    JSON.parse(localStorage.getItem('paymentMethod')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage,\r\n        shippingAddress: shippingAddressFromLocalStorage,\r\n        paymentMethod: paymentMethodFromLocalStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromLocalStorage }\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n} from '../constants/productConstatns'\r\n\r\n\r\nexport const listProductReducer = (state = { products: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { products: [], loading: true }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { products: action.payload, loading: false }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { error: action.payload, loading: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const detailsProductReducer = (state = { product: { reviews: [] } }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { product: action.payload, loading: false }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { error: action.payload, loading: false }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstatns'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {}, paymentMethod: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success: true }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}   ","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const BASE_URL = \"https://django-react-eshop.liara.run\";\r\nexport const API_VERSION = \"api/v1\";","import jwt_decode from 'jwt-decode';\r\nimport dayjs from 'dayjs';\r\nimport axios from 'axios';\r\nimport { updateAccessToken } from '../actions/userActions';\r\n\r\nimport { BASE_URL, API_VERSION } from '../constants/urlConstants'\r\n\r\n\r\n\r\nconst baseURL = ''\r\nconst axiosInstance = (userInfo, dispatch) => {\r\n\r\n    const instance = axios.create({\r\n        baseURL,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo?.access}`\r\n        }\r\n    })\r\n\r\n\r\n    instance.interceptors.request.use(async req => {\r\n        const user = jwt_decode(userInfo.access)\r\n        const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 5000;\r\n\r\n        if (!isExpired) return req\r\n\r\n        const response = await axios.post(\r\n            `${BASE_URL}/${API_VERSION}/users/token/refresh/`,\r\n            { refresh: userInfo.refresh },\r\n        )\r\n\r\n        dispatch(updateAccessToken(response.data))\r\n        req.headers.Authorization = `Bearer ${response.data.access}`\r\n        return req\r\n    })\r\n\r\n\r\n\r\n    return instance\r\n}\r\n\r\nexport default axiosInstance;","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nimport { BASE_URL, API_VERSION } from '../constants/urlConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nimport axios from 'axios'\r\nimport axiosInstance from '../utils/axiosInstance'\r\n\r\n\r\nexport const userLoginAction = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({// USER_LOGIN_REQUEST\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {// request setting\r\n            header: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(// send request login\r\n            `${BASE_URL}/${API_VERSION}/users/login/`,\r\n            { 'username': email, 'password': password },\r\n            config,\r\n        )\r\n\r\n        dispatch({// USER_LOGIN_SUCCESS\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(// save user information in local storage\r\n            'userInfo',\r\n            JSON.stringify(data)\r\n        )\r\n\r\n    } catch (error) {\r\n        dispatch({// USER_LOGIN_FAIL\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userLogoutAction = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n}\r\n\r\n\r\nexport const userRegisterAction = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ // USER_REGISTER_REQUEST\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {// request setting\r\n            header: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(// register request\r\n            `${BASE_URL}/${API_VERSION}/users/register/`,\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({// USER_REGISTER_SUCCESS\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({// USER_REGISTER_FAIL\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetailsAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({// USER_DETAILS_REQUEST\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n        const { data } = await authRequestAxios.get(\r\n            `${BASE_URL}/${API_VERSION}/users/${id}`,\r\n        )\r\n\r\n        dispatch({// USER_DETAILS_SUCCESS\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({// USER_DETAILS_FAIL\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfileAction = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({// USER_UPDATE_PROFILE_REQUEST\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n\r\n        const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n        const { data } = await authRequestAxios.put(// send update profile request\r\n            `${BASE_URL}/${API_VERSION}/users/profile/update/`,\r\n            user,\r\n        )\r\n        userInfo.name = data.name\r\n\r\n        dispatch({// USER_UPDATE_PROFILE_SUCCESS\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: userInfo\r\n        })\r\n\r\n        dispatch({// USER_LOGIN_SUCCESS\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: userInfo\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n    } catch (error) {\r\n        dispatch({// USER_UPDATE_PROFILE_FAIL\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateAccessToken = (obj) => (dispatch, getState) => {\r\n    const { userLogin: { userInfo } } = getState()\r\n\r\n    userInfo.access = obj.access\r\n    userInfo.refresh = obj.refresh\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: userInfo })\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { userLogoutAction } from '../actions/userActions'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(userLogoutAction())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>E-Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"bg-dark p-3 text-light\">\r\n            <Container>\r\n                <Row >\r\n                    <Col>Copyright &copy; E-Shop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? \"fas fa-star\"\r\n                        : value >= 0.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? \"fas fa-star\"\r\n                        : value >= 1.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }></i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? \"fas fa-star\"\r\n                        : value >= 2.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }></i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? \"fas fa-star\"\r\n                        : value >= 3.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }></i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? \"fas fa-star\"\r\n                        : value >= 4.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }></i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <div>\r\n            <Card className=\"p-3 my-3 rounded\">\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Img src={product.image} className=\"card-img-top\" />\r\n                </Link>\r\n                <Card.Body>\r\n                    <Link to={`/product/${product._id}`} >\r\n                        <Card.Title as=\"h5\">\r\n                            <strong>{product.name}</strong>\r\n                        </Card.Title>\r\n                    </Link>\r\n\r\n                    <Card.Text as=\"div\" className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#F8E825\"} />\r\n                    </Card.Text>\r\n\r\n                    <Card.Text as=\"h3\">\r\n                        ${product.price}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                display: 'block',\r\n                margin: 'auto'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading</span>\r\n\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, text }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {text}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { fetchProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction HomeScreen() {\r\n    const dispatch = useDispatch()\r\n    const listProducts = useSelector(state => state.listProduct)\r\n    const { error, loading, products } = listProducts\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger' text={error} />\r\n                    : <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n} from '../constants/productConstatns'\r\n\r\nimport { BASE_URL, API_VERSION } from '../constants/urlConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nexport const fetchProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`${BASE_URL}/${API_VERSION}/products/`)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`${BASE_URL}/${API_VERSION}/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { fetchProductDetails } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProductDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link>\r\n\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger' text={error} />\r\n                    :\r\n                    (<Row>\r\n\r\n                        <Col sm={12} md={5} lg={5} xl={5}>\r\n                            <Image src={product.image} alt={product.name} />\r\n\r\n                        </Col>\r\n                        <Col sm={12} md={7} lg={7} xl={7}>\r\n\r\n                            <Row>\r\n\r\n                                <Col sm={12} md={6} lg={6} xl={6} className=\"my-3\">\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h5>{product.name}</h5>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#F8E825\"} />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col sm={12} md={6} lg={6} xl={6} className=\"mb-3\">\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Price:\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    ${product.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Status:\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty:</Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as=\"select\" custom value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCartHandler}\r\n                                                type=\"button\"\r\n                                                className=\"btn-block\"\r\n                                                disabled={product.countInStock === 0}>\r\n                                                Add to Cart\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"my-3\">\r\n                                    <strong>Description:</strong> {product.description}\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n\r\n                        </Col>\r\n                    </Row>)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstatns'\r\n\r\nimport { BASE_URL, API_VERSION } from '../constants/urlConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n\r\n    const { data } = await axios.get(`${BASE_URL}/${API_VERSION}/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch, getState) => {\r\n    dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Card, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info' text='Your cart is empty!' />\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}> {item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { userLoginAction } from '../actions/userActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n\r\n    var redirect = location.search ? location.search.split('=')[1] : '/'\r\n    if (redirect === 'success' || redirect === 'fail') {\r\n        redirect = '/'\r\n    }\r\n    const tokenResult = location.search ? location.search.split('=')[1] : \"\"\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo, loading } = userLogin\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [activationMessage, setActivationMessage] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userLoginAction(email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        } else if (!userInfo) {\r\n            switch (tokenResult) {\r\n\r\n                case 'success':\r\n                    setActivationMessage('Your account successfully activated. Now you can login')\r\n                    break;\r\n\r\n                case 'fail':\r\n                    setActivationMessage('Your activation link isn\\'t valid. Please go to register page and try again.')\r\n                    break;\r\n\r\n                default:\r\n                    setActivationMessage('')\r\n            }\r\n        }\r\n\r\n    }, [history, userInfo, redirect, tokenResult])\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <h1>sign in</h1>\r\n\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger' text={error} />\r\n                        : tokenResult === 'success' ? <Message variant='success' text={activationMessage} />\r\n                            : tokenResult === 'fail' ? <Message variant='danger' text={activationMessage} />\r\n                                : <></>\r\n            }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password' className='my-4'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                    className='col-4'\r\n                >\r\n                    sign in\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n\r\n            <Row className=\"my-4\">\r\n                <Col>\r\n                    New Customer ?\r\n\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Form, Col, Row, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userRegisterAction } from '../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    // redirect path\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    // local states\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [emailMessage, setEmailMessage] = useState('')\r\n\r\n    // handle registe user\r\n    const dispatch = useDispatch()\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password and confirm password do not match !')\r\n        } else {\r\n            dispatch(userRegisterAction(name, email, password))\r\n            setName('')\r\n            setEmail('')\r\n            setPassword('')\r\n            setConfirmPassword('')\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.detail) {\r\n            setEmailMessage(userInfo.detail)\r\n        }\r\n    }, [history, redirect, userInfo])\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>sign up</h1>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger' text={error} />\r\n                        : emailMessage ? <Message variant='warning' text={emailMessage} />\r\n                            : message ? <Message variant='danger' text={message} />\r\n                                : <></>\r\n            }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>FullName</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter FullName'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mt-4' controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mt-4' controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mt-4' controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    className='my-4 col-4'\r\n                >\r\n                    register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className=\"my-4\">\r\n                <Col>\r\n                    Have an Account ?\r\n\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getUserDetailsAction, updateUserProfileAction, userLogoutAction } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { getMyOrderList } from '../actions/orderActions'\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    // local states\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [successUpdate, setSuccessUpdate] = useState('')\r\n\r\n    // handle getUserDetails\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error: errorUserDetails, loading: loadingUserDetails } = userDetails\r\n\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success, error: errorUpdateProfile, loading: loadingUpdateProfile } = userUpdateProfile\r\n\r\n\r\n    // handle getMyOrderList\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { orders, error: errorOrders, loading: loadingOrders } = orderListMy\r\n\r\n\r\n    // handle loading and error\r\n    let loading = false\r\n    let error = ''\r\n\r\n    if (loadingUserDetails || loadingUpdateProfile) {\r\n        loading = true\r\n    }\r\n\r\n    if (errorUserDetails) {\r\n        error = errorUserDetails\r\n    } else if (errorUpdateProfile) {\r\n        error = errorUpdateProfile\r\n    }\r\n\r\n    const TE = \"Token is invalid or expired\"\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (errorUserDetails === TE || errorUpdateProfile === TE) {\r\n            dispatch(userLogoutAction())\r\n            history.push('/login?redirect=/profile')\r\n        }\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetailsAction('profile'))\r\n                dispatch(getMyOrderList())\r\n            } else {\r\n                setEmail(user.email)\r\n                setName(user.name)\r\n            }\r\n        }\r\n    }, [history, userInfo, user, dispatch, success, errorUserDetails, errorUpdateProfile])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match !')\r\n        } else {\r\n            dispatch(updateUserProfileAction({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n            setPassword('')\r\n            setConfirmPassword('')\r\n            setSuccessUpdate('Profile successfully updated !')\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>my profile</h2>\r\n                {\r\n                    loading ? <Loader />\r\n                        : error ? <Message variant='danger' text={error} />\r\n                            : message ? <Message variant='danger' text={message} />\r\n                                : successUpdate ? <Message variant='success' text={successUpdate} />\r\n                                    : <></>\r\n                }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>FullName</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter FullName'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mt-4' controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mt-4' controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mt-4' controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                        type='submit'\r\n                        className='my-4 col-6'\r\n                        disabled={loading === true}\r\n                    >\r\n                        update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>my orders</h2>\r\n                {\r\n                    loadingOrders ? (\r\n                        <Loader />\r\n                    ) : errorOrders ? (\r\n                        <Message variant='danger' text={errorOrders} />\r\n                    ) : orders && orders.length === 0 ? (\r\n                        <Message variant='warning' text='There is no any order !' />\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm text-center'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>id</th>\r\n                                    <th>date</th>\r\n                                    <th>total</th>\r\n                                    <th>paid</th>\r\n                                    <th>delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {\r\n                                    orders.map(order => (\r\n                                        <tr\r\n                                            key={order._id}\r\n                                            className={order.isPaid && order.isDelivered ? 'bg-success text-white' : ''}\r\n                                        >\r\n                                            <td>#{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>$ {order.totalPrice}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.isPaid ?\r\n                                                        order.paidAt.substring(0, 10) : (\r\n                                                            <i className='fas fa-times text-danger'></i>\r\n                                                        )\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.isDelivered ?\r\n                                                        order.deliveredAt.substring(0, 10) : (\r\n                                                            <i className='fas fa-times text-danger'></i>\r\n                                                        )\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button\r\n                                                        className='btn-sm'\r\n                                                    >\r\n                                                        details\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstatns'\r\n\r\nimport { BASE_URL, API_VERSION } from '../constants/urlConstants'\r\n\r\nimport axiosInstance from '../utils/axiosInstance'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n\r\n        const { data } = await authRequestAxios.post(\r\n            `${BASE_URL}/${API_VERSION}/orders/add/`,\r\n            order\r\n        )\r\n\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: CART_CLEAR_ITEMS })\r\n\r\n        localStorage.removeItem('cartItems')\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n\r\n        const { data } = await authRequestAxios.get(\r\n            `${BASE_URL}/${API_VERSION}/orders/${id}/`\r\n        )\r\n\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getMyOrderList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n\r\n        const { data } = await authRequestAxios.get(\r\n            `${BASE_URL}/${API_VERSION}/orders/my/`,\r\n        )\r\n\r\n        dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const goPayGate = (authRequestAxios, id) => {\r\n\r\n    const response = authRequestAxios.get(\r\n        `${BASE_URL}/${API_VERSION}/orders/${id}/pay/`,\r\n    )\r\n    return response\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className='mb-4 justify-content-center'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login?redirect=/shipping'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>PlaceOrder</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>PlaceOrder</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n\r\n\r\n\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ postalCode, address, city, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>shipping</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='postalCode' className='mt-4'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : \"\"}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address' className='mt-4'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : \"\"}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city' className='mt-4'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : \"\"}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country' className='mt-4'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : \"\"}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    className='col-4 mt-4'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('IdPay')\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Form.Check\r\n                        name='paymentMethod'\r\n                        id='idpay'\r\n                        label='IdPay or Credit Card'\r\n                        type='radio'\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        className='py-4'\r\n                        checked\r\n                    ></Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    className='col-4'\r\n                >Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col, Button, Image, ListGroup, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { success, order, error, loading } = orderCreate\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.country} -\r\n                                {' '}\r\n                                {cart.shippingAddress.city} -\r\n                                {' '}\r\n                                {cart.shippingAddress.address} /\r\n                                Postal Code: {cart.shippingAddress.postalCode}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>payment method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>order items</h2>\r\n                            {\r\n                                cart.cartItems.length === 0\r\n                                    ? <Message variant='info' text='Your cart is empty !' />\r\n                                    : (\r\n                                        <ListGroup variant='flush'>\r\n                                            {cart.cartItems.map((item, index) => (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col md={2} className='my-auto'>\r\n                                                            <Image src={item.image} alt={item.name} fluid />\r\n                                                        </Col>\r\n                                                        <Col className='my-auto'>\r\n                                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4} className='my-auto'>\r\n                                                            {item.qty} X {item.price} = $ {(item.price * item.qty).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>order summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>$ {cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>$ {cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>$ {cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>$ {cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {\r\n                                loading ?\r\n                                    <ListGroup.Item>\r\n                                        <Loader />\r\n                                    </ListGroup.Item>\r\n                                    : error ?\r\n                                        <ListGroup.Item>\r\n                                            <Message variant='danger' text={error} />\r\n                                        </ListGroup.Item>\r\n                                        : <></>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    onClick={placeOrder}\r\n                                    disabled={cart.cartItems.length === 0}\r\n                                    className='btn-block'>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getOrderDetails } from '../actions/orderActions'\r\nimport { Row, Col, Button, Image, ListGroup, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { goPayGate } from '../actions/orderActions'\r\nimport axiosInstance from '../utils/axiosInstance'\r\n\r\n\r\nfunction OrderScreen({ match }) {\r\n  const orderId = match.params.id\r\n  const dispatch = useDispatch()\r\n  const orderDetails = useSelector(state => state.orderDetails)\r\n  const { order, error, loading } = orderDetails\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!order || order._id !== Number(orderId)) {\r\n      dispatch(getOrderDetails(orderId))\r\n    }\r\n  }, [order, orderId, dispatch])\r\n\r\n\r\n  // handle pay order\r\n\r\n  const [payGateMessage, setPayGateMessage] = useState('')\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n\r\n  const payOrderHandler = () => {\r\n    goPayGate(authRequestAxios, orderId)\r\n      .then((response) => {\r\n        window.location.assign(response.data.link)\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data && error.response.data.detail) {\r\n          setPayGateMessage(error.response.data.detail)\r\n        } else {\r\n          setPayGateMessage(error.response.data)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger' text={error} />\r\n  ) : (\r\n    <div>\r\n      <h1>order: #{order._id}</h1>\r\n      <hr />\r\n\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>shipping</h2>\r\n              <p><strong>Name: </strong>{order.user.name}</p>\r\n              <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.country} -\r\n                {' '}\r\n                {order.shippingAddress.city} -\r\n                {' '}\r\n                {order.shippingAddress.address} /\r\n                Postal Code: {order.shippingAddress.postalCode}\r\n              </p>\r\n\r\n              {\r\n                order.isDelivered ? (\r\n                  <Message\r\n                    variant='success'\r\n                    text={`Delivered on ${order.deliveredAt}`}\r\n                  />\r\n                ) : (\r\n                  <Message\r\n                    variant='warning'\r\n                    text='Not delivered'\r\n                  />\r\n                )\r\n              }\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>payment method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {\r\n                order.isPaid ? (\r\n                  <Message\r\n                    variant='success'\r\n                    text={`Paid on ${order.paidAt}`}\r\n                  />\r\n                ) : (\r\n                  <Message\r\n                    variant='warning'\r\n                    text='Not paid'\r\n                  />\r\n                )\r\n              }\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>order items</h2>\r\n              {\r\n                order.orderItems.length === 0\r\n                  ? <Message variant='info' text='Your order is empty !' />\r\n                  : (\r\n                    <ListGroup variant='flush'>\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={2} className='my-auto'>\r\n                              <Image src={item.image} alt={item.name} fluid />\r\n                            </Col>\r\n                            <Col className='my-auto'>\r\n                              <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={4} className='my-auto'>\r\n                              {item.qty} X {item.price} = $ {(item.price * item.qty).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>order summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items: </Col>\r\n                  <Col>$ {order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping: </Col>\r\n                  <Col>$ {order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax: </Col>\r\n                  <Col>$ {order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total: </Col>\r\n                  <Col>$ {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item\r\n                className={payGateMessage ? '' : 'd-none'}\r\n              >\r\n                <Message variant='danger' text={payGateMessage} />\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item\r\n                className={order.isPaid ? 'd-none' : ''}\r\n              >\r\n                <Button\r\n                  type='button'\r\n                  onClick={payOrderHandler}\r\n                >pay order</Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n\r\n\r\n          </Card>\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { inquiryPayResult } from '../actions/payActions'\r\nimport axiosInstance from '../utils/axiosInstance'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Row, Col, Button, ListGroup } from 'react-bootstrap'\r\n\r\nfunction PayResultScreen({ match, history }) {\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const [serverMsg, setServerMsg] = useState('')\r\n    const [serverStatus, setServerStatus] = useState('')\r\n    const [serverTrackId, setServerTrackId] = useState('')\r\n    const [serverOrderId, setServerOrderId] = useState('')\r\n    const [serverError, setServerError] = useState('')\r\n\r\n\r\n\r\n    const orderId = match.params.oid\r\n    const trackId = match.params.trackId\r\n    const transId = match.params.transId\r\n\r\n    const payInq = {\r\n        'transId': transId,\r\n        'track_id': trackId\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const authRequestAxios = axiosInstance(userInfo, dispatch)\r\n    useEffect(() => {\r\n        inquiryPayResult(authRequestAxios, orderId, payInq)\r\n            .then((response) => {\r\n                // console.log(response.data)\r\n                const data = response.data\r\n                if (data.success) {\r\n                    setSuccess(true)\r\n                }\r\n\r\n                setServerMsg(data.message)\r\n                setServerOrderId(data.order_id)\r\n                setServerStatus(data.status)\r\n                setServerTrackId(data.track_id)\r\n            })\r\n            .catch((error) => {\r\n                if (error.response && error.response.data.detail) {\r\n                    setServerError(error.response.data.detail)\r\n                } else {\r\n                    setServerError(error.message)\r\n                }\r\n            })\r\n    })\r\n\r\n\r\n    const goOrder = () => {\r\n        if (serverOrderId) {\r\n            history.push(`/order/${serverOrderId}`)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {!serverError && !serverMsg ? <Loader />\r\n                : serverError ? <Message variant='danger' text={serverError} />\r\n                    : (\r\n                        <FormContainer>\r\n                            <ListGroup variant='flush' className='text-center'>\r\n                                <ListGroup.Item>\r\n                                    <h2 className={!success ? 'text-danger' : 'text-success'}>\r\n                                        {\r\n                                            success ? \"Transaction success\" : \"Transaction fail\"\r\n                                        }\r\n                                    </h2>\r\n                                    <small>{serverMsg}</small>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Status Code</Col>\r\n                                        <Col>{serverStatus}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Track IDPAY</Col>\r\n                                        <Col>{serverTrackId}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Order NO</Col>\r\n                                        <Col>{serverOrderId}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        onClick={goOrder}\r\n                                    >\r\n                                        order details\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </FormContainer>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayResultScreen","import { BASE_URL, API_VERSION } from '../constants/urlConstants'\r\n\r\nexport const inquiryPayResult = (authRequestAxios, order_id, payInq) => {\r\n\r\n    const response = authRequestAxios.post(\r\n        `${BASE_URL}/${API_VERSION}/orders/${order_id}/inquirypay/`,\r\n        payInq\r\n    )\r\n    return response\r\n}","import { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    return (\r\n        <Route {...rest}>{!userInfo ? <Redirect to={`/login?redirect=${rest['path']}`} /> : children}</Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport { Container } from 'react-bootstrap'\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport PayResultScreen from './screens/PayResultScreen';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main>\r\n        <Container className='py-3'>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <PrivateRoute path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <PrivateRoute path='/payresult/:trackId/:oid/:transId' component={PayResultScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}